# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to pages after building

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
#   contents: read
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout
        uses: actions/setup-node@v3
        with: 
          node-version: 16
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn run build
      - name: Deploy branch
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          cname: blog.iin0.cn
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
      # - name: flush the cdn
      #   uses: keithnull/tencent-cloud-cdn-purge-cache@v1.0
      #   env:
      #     SECRET_ID: ${{ secrets.TX_CLOUD_SECRET_ID }}
      #     SECRET_KEY: ${{ secrets.TX_CLOUD_SECRET_KEY }}
      #     PATHS: "https://blog.iin0.cn/"
      #     FLUSH_TYPE: "flush" # optional
      - name: Deploy certificate to Aliyun
        uses: Menci/deploy-certificate-to-aliyun@beta-v1
        with:
          # Use Access Key
          access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          # Or use STS Token
          # security-token: ${{ secrets.ALIYUN_SECURITY_TOKEN }}

          # Specify PEM fullchain file
          fullchain-file: ${{ env.FILE_FULLCHAIN }}
          # Specify PEM private key file
          key-file: ${{ env.FILE_KEY }}

          # The name in Aliyun Certificates Service
          # Will replace the old one with the same name
          certificate-name: My-SSL

          # (Optional) Deploy to CDN
          cdn-domains: |
            blog.iin0.cn
        
          # (Optional) API request timeout (unit ms)
          timeout: 10000

          # (Optional) API request attempt times
          retry: 3
